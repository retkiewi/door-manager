[{"D:\\AGH\\Sem5\\TIR\\door-manager\\src\\index.tsx":"1","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\reportWebVitals.ts":"2","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\App.tsx":"3","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\Sidebar\\index.tsx":"4","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\LoginBox\\index.tsx":"5","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\DoorManagerView\\index.tsx":"6","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\UserManagerView\\index.tsx":"7","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\ViewLogsTab\\index.tsx":"8","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\ManageAccessTab\\index.tsx":"9","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\firebaseApp.tsx":"10","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\mqtt_components\\mqtt_client.tsx":"11"},{"size":778,"mtime":1609948298354,"results":"12","hashOfConfig":"13"},{"size":440,"mtime":1609871603006,"results":"14","hashOfConfig":"13"},{"size":1137,"mtime":1610130464462,"results":"15","hashOfConfig":"13"},{"size":1299,"mtime":1609880361427,"results":"16","hashOfConfig":"13"},{"size":1594,"mtime":1609871603001,"results":"17","hashOfConfig":"13"},{"size":1022,"mtime":1609871603000,"results":"18","hashOfConfig":"13"},{"size":3550,"mtime":1610128658244,"results":"19","hashOfConfig":"13"},{"size":2436,"mtime":1610133561567,"results":"20","hashOfConfig":"13"},{"size":4086,"mtime":1610128658246,"results":"21","hashOfConfig":"13"},{"size":428,"mtime":1609880334279,"results":"22","hashOfConfig":"13"},{"size":2781,"mtime":1610199060667,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1sjqsfc",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\AGH\\Sem5\\TIR\\door-manager\\src\\index.tsx",[],["53","54"],"D:\\AGH\\Sem5\\TIR\\door-manager\\src\\reportWebVitals.ts",[],"D:\\AGH\\Sem5\\TIR\\door-manager\\src\\App.tsx",["55"],"import React, { useState } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport { LoginBox } from \"./components/LoginBox\";\r\nimport { Sidebar } from \"./components/Sidebar\";\r\nimport { DoorManagerView } from \"./components/DoorManagerView\";\r\nimport { UserManagerView} from \"./components/UserManagerView\";\r\nimport { MqttClient } from './components/mqtt_components/mqtt_client';\r\n\r\nfunction App() {\r\n  MqttClient();\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n  const [currentView, setCurrentView] = useState(0);\r\n\r\n  const viewMap = {\r\n    0: DoorManagerView,\r\n    1: UserManagerView,\r\n  };\r\n\r\n  const CurrentViewComponent = viewMap[currentView];\r\n  return (\r\n      <div className=\"App\">\r\n        {!isLoggedIn ? (\r\n            <LoginBox isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\r\n        ) : (\r\n            <div className=\"MainFrame\">\r\n              <Sidebar isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} currentView={currentView} setCurrentView={setCurrentView}/>\r\n              <CurrentViewComponent/>\r\n            </div>\r\n        )}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\Sidebar\\index.tsx",["56"],"import { FC } from \"react\";\r\nimport styles from \"./styles.module.css\";\r\nimport { inspect } from \"util\";\r\nimport {Button, styled} from \"@material-ui/core\";\r\n\r\nconst MenuButton = styled(Button)({\r\n    margin: \"0 10px 20px 10px\",\r\n})\r\n\r\nconst LogOutButton = styled(Button)({\r\n    margin: \"auto 10px 10px 10px\",\r\n})\r\n\r\nexport const Sidebar: FC<{\r\n  isLoggedIn: boolean;\r\n  setIsLoggedIn: (state: boolean) => void;\r\n}> = (props) => {\r\n    function logOut() {\r\n        props.setIsLoggedIn(false);\r\n    }\r\n\r\n\r\n  return (\r\n    <div className={styles.SideBar}>\r\n      <MenuButton\r\n        variant={\"contained\"}\r\n        color={\"primary\"}\r\n        className={styles.MenuButton}\r\n      >\r\n        Manage Doors\r\n      </MenuButton>\r\n      <MenuButton\r\n        variant={\"contained\"}\r\n        color={\"primary\"}\r\n        className={styles.MenuButton}\r\n      >\r\n        Manage Users\r\n      </MenuButton>\r\n      <LogOutButton variant={\"contained\"} className={styles.LogOutButton} onClick={logOut}>\r\n        Log Out\r\n      </LogOutButton>\r\n    </div>\r\n  );\r\n};\r\n","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\LoginBox\\index.tsx",[],"D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\DoorManagerView\\index.tsx",["57","58","59","60","61","62","63","64","65","66","67"],"import { FC, useState } from \"react\";\r\nimport styles from \"./styles.module.css\";\r\nimport { ManageAccessTab } from \"../ManageAccessTab\"\r\nimport { ViewLogsTab } from \"../ViewLogsTab\"\r\nimport {\r\n  AppBar,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Paper,\r\n  styled,\r\n  Tab,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Tabs,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n\r\nexport const DoorManagerView: FC = (props) => {\r\n  const tabMap = {\r\n    0: ManageAccessTab,\r\n    1: ViewLogsTab,\r\n  };\r\n  const [tab, setTab] = useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setTab(newValue);\r\n  };\r\n\r\n  const CurrentTab = tabMap[tab];\r\n  return (\r\n    <div className={styles.DoorManagerView}>\r\n      <AppBar position={\"sticky\"}>\r\n        <Tabs value={tab} onChange={handleChange} indicatorColor={\"secondary\"}>\r\n          <Tab label={\"Manage Access\"} />\r\n          <Tab label={\"View Logs\"} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <CurrentTab></CurrentTab>\r\n    </div>\r\n  );\r\n};\r\n","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\UserManagerView\\index.tsx",["68","69","70","71"],"import {\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Paper,\r\n  styled,\r\n  Table, TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport {FC, useState} from \"react\";\r\nimport styles from \"../DoorManagerView/styles.module.css\";\r\nimport {useCollection} from \"react-firebase-hooks/firestore\";\r\nimport {firebaseApp} from \"../../firebaseApp\";\r\n\r\nexport const UserManagerView: FC = (props) => {\r\n\r\n  const MyTableCell = styled(TableCell)({\r\n    paddingLeft: \"25px\",\r\n  });\r\n\r\n  function applyFilter(value, filter) {\r\n    value = value.replaceAll(\":\", \"\");\r\n    filter = filter.replaceAll(\":\", \"\");\r\n    return new RegExp(`.*${filter}.*`, \"i\").test(value);\r\n  }\r\n\r\n  const [nameFilter, setNameFilter] = useState(\"\");\r\n\r\n  const [surnameFilter, setSurnameFilter] = useState(\"\");\r\n\r\n  const [cardIdFilter, setCardIdFilter] = useState(\"\");\r\n\r\n  const [hasAccessFilter, setHasAccessFilter] = useState(false);\r\n\r\n  const [loadedUsers, loading, error] = useCollection(firebaseApp.firestore().collection('Users'));\r\n\r\n  return (\r\n      <div className={styles.DoorManagerView}>\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <TextField\r\n                      variant={\"outlined\"}\r\n                      size={\"small\"}\r\n                      label={\"Name\"}\r\n                      value={nameFilter}\r\n                      onChange={(e) => setNameFilter(e.target.value)}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                      variant={\"outlined\"}\r\n                      size={\"small\"}\r\n                      label={\"Surname\"}\r\n                      value={surnameFilter}\r\n                      onChange={(e) => setSurnameFilter(e.target.value)}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                      variant={\"outlined\"}\r\n                      size={\"small\"}\r\n                      label={\"Card ID\"}\r\n                      value={cardIdFilter}\r\n                      onChange={(e) => setCardIdFilter(e.target.value)}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Button variant={\"contained\"}>ADD</Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading ? <div>Loading data</div> : (loadedUsers && loadedUsers?.docs && (loadedUsers?.docs as any).map((row, i) =>\r\n                  applyFilter(row.data().name, nameFilter) &&\r\n                  applyFilter(row.data().surname, surnameFilter) &&\r\n                  applyFilter(row.data().cardID, cardIdFilter) &&\r\n                  row.data().hasAccess === hasAccessFilter ? (\r\n                      <TableRow key={row.data().cardID}>\r\n                        <MyTableCell>{row.data().name}</MyTableCell>\r\n                        <MyTableCell>{row.data().surname}</MyTableCell>\r\n                        {<MyTableCell>{row.data().cardID}</MyTableCell>}\r\n\r\n                        <TableCell align=\"center\">\r\n                          <Button variant={\"contained\"}>Remove</Button>\r\n                        </TableCell>\r\n\r\n                      </TableRow>\r\n                  ) : null\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n  );\r\n};\r\n","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\ViewLogsTab\\index.tsx",["72","73"],"import {Paper, styled, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\r\nimport {FC} from \"react\";\r\nimport {useCollection, useCollectionData} from \"react-firebase-hooks/firestore\";\r\nimport {firebaseApp} from \"../../firebaseApp\";\r\n\r\nexport const ViewLogsTab: FC = (props) => {\r\n\r\n    const MyTableCell = styled(TableCell)({\r\n        paddingLeft: \"25px\",\r\n    });\r\n\r\n    const [loadedLogs, loading, error] = useCollection(firebaseApp.firestore().collection('Logs'));\r\n\r\n    function getDate(value) {\r\n        const date = new Date(value);\r\n        let hour = \"\", minute = \"\", second = \"\";\r\n        if(date.getHours() < 10)\r\n            hour = \"0\"+date.getHours().toString();\r\n        else\r\n            hour = date.getHours().toString();\r\n\r\n        if(date.getMinutes() < 10)\r\n            minute = \"0\"+date.getMinutes().toString();\r\n        else\r\n            minute = date.getMinutes().toString();\r\n\r\n        if(date.getSeconds() < 10)\r\n            second = \"0\"+date.getSeconds().toString();\r\n        else\r\n            second = date.getSeconds().toString();\r\n\r\n        return date.toDateString() + \" \" + hour + \":\" + minute + \":\" + second;\r\n    }\r\n\r\n    return <div>\r\n        <TableContainer component={Paper}>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Date and Time</TableCell>\r\n                        <TableCell>Name</TableCell>\r\n                        <TableCell>Surname</TableCell>\r\n                        <TableCell>Card ID</TableCell>\r\n                        <TableCell>Access</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {loading ? <div>Loading data</div> : (loadedLogs && loadedLogs?.docs && (loadedLogs?.docs as any).map((row, i) =>\r\n                        <TableRow key={row.id}>\r\n                            <MyTableCell>{getDate(row.data().time)}</MyTableCell>\r\n                            <MyTableCell>{row.data().name}</MyTableCell>\r\n                            <MyTableCell>{row.data().surname}</MyTableCell>\r\n                            <MyTableCell>{row.data().cardID}</MyTableCell>\r\n                            <MyTableCell>{row.data().access}</MyTableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    </div>;\r\n};\r\n","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\ManageAccessTab\\index.tsx",["74"],"import {\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Paper,\r\n  styled,\r\n  Table, TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport {FC, useState} from \"react\";\r\nimport {useCollection} from \"react-firebase-hooks/firestore\";\r\nimport {firebaseApp} from \"../../firebaseApp\";\r\n\r\nexport const ManageAccessTab: FC = (props) => {\r\n\r\n  const MyTableCell = styled(TableCell)({\r\n    paddingLeft: \"25px\",\r\n  });\r\n\r\n  function applyFilter(value, filter) {\r\n    value = value.replaceAll(\":\", \"\");\r\n    filter = filter.replaceAll(\":\", \"\");\r\n    return new RegExp(`.*${filter}.*`, \"i\").test(value);\r\n  }\r\n\r\n  const [nameFilter, setNameFilter] = useState(\"\");\r\n\r\n  const [surnameFilter, setSurnameFilter] = useState(\"\");\r\n\r\n  const [cardIdFilter, setCardIdFilter] = useState(\"\");\r\n\r\n  const [hasAccessFilter, setHasAccessFilter] = useState(false);\r\n\r\n  const [loadedUsers, loading, error] = useCollection(firebaseApp.firestore().collection('Users'));\r\n\r\n  const onCheckboxChange = (index, value) => {\r\n    firebaseApp.firestore().collection('Users').doc(index).set({\"hasAccess\" : value}, {merge:true})\r\n  };\r\n\r\n  return (\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <TextField\r\n                      variant={\"outlined\"}\r\n                      size={\"small\"}\r\n                      label={\"Name\"}\r\n                      value={nameFilter}\r\n                      onChange={(e) => setNameFilter(e.target.value)}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                      variant={\"outlined\"}\r\n                      size={\"small\"}\r\n                      label={\"Surname\"}\r\n                      value={surnameFilter}\r\n                      onChange={(e) => setSurnameFilter(e.target.value)}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                      variant={\"outlined\"}\r\n                      size={\"small\"}\r\n                      label={\"Card ID\"}\r\n                      value={cardIdFilter}\r\n                      onChange={(e) => setCardIdFilter(e.target.value)}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                            checked={hasAccessFilter}\r\n                            onChange={(e) => setHasAccessFilter(e.target.checked)}\r\n                        />\r\n                      }\r\n                      label=\"Has Access\"\r\n                      labelPlacement=\"start\"\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading ? <div>Loading data</div> : (loadedUsers && loadedUsers?.docs && (loadedUsers?.docs as any).map((row, i) =>\r\n                  applyFilter(row.data().name, nameFilter) &&\r\n                  applyFilter(row.data().surname, surnameFilter) &&\r\n                  applyFilter(row.data().cardID, cardIdFilter) &&\r\n                  row.data().hasAccess === hasAccessFilter ? (\r\n                      <TableRow key={row.id}>\r\n                        <MyTableCell>{row.data().name}</MyTableCell>\r\n                        <MyTableCell>{row.data().surname}</MyTableCell>\r\n                        {<MyTableCell>{row.data().cardID}</MyTableCell>}\r\n\r\n                        <TableCell align=\"center\">\r\n                          <Checkbox\r\n                              checked={row.data().hasAccess}\r\n                              onChange={() => onCheckboxChange(row.id,!row.data().hasAccess)}\r\n                          />\r\n                        </TableCell>\r\n\r\n                      </TableRow>\r\n                  ) : null\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n  );\r\n};\r\n","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\firebaseApp.tsx",[],"D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\mqtt_components\\mqtt_client.tsx",["75","76","77","78","79","80","81","82","83","84","85"],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":12},{"ruleId":"90","severity":1,"message":"94","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":17},{"ruleId":"90","severity":1,"message":"95","line":7,"column":3,"nodeType":"92","messageId":"93","endLine":7,"endColumn":11},{"ruleId":"90","severity":1,"message":"96","line":8,"column":3,"nodeType":"92","messageId":"93","endLine":8,"endColumn":19},{"ruleId":"90","severity":1,"message":"97","line":9,"column":3,"nodeType":"92","messageId":"93","endLine":9,"endColumn":8},{"ruleId":"90","severity":1,"message":"98","line":10,"column":3,"nodeType":"92","messageId":"93","endLine":10,"endColumn":9},{"ruleId":"90","severity":1,"message":"99","line":12,"column":3,"nodeType":"92","messageId":"93","endLine":12,"endColumn":8},{"ruleId":"90","severity":1,"message":"100","line":13,"column":3,"nodeType":"92","messageId":"93","endLine":13,"endColumn":12},{"ruleId":"90","severity":1,"message":"101","line":14,"column":3,"nodeType":"92","messageId":"93","endLine":14,"endColumn":12},{"ruleId":"90","severity":1,"message":"102","line":15,"column":3,"nodeType":"92","messageId":"93","endLine":15,"endColumn":17},{"ruleId":"90","severity":1,"message":"103","line":16,"column":3,"nodeType":"92","messageId":"93","endLine":16,"endColumn":12},{"ruleId":"90","severity":1,"message":"104","line":17,"column":3,"nodeType":"92","messageId":"93","endLine":17,"endColumn":11},{"ruleId":"90","severity":1,"message":"105","line":19,"column":3,"nodeType":"92","messageId":"93","endLine":19,"endColumn":12},{"ruleId":"90","severity":1,"message":"95","line":3,"column":3,"nodeType":"92","messageId":"93","endLine":3,"endColumn":11},{"ruleId":"90","severity":1,"message":"96","line":4,"column":3,"nodeType":"92","messageId":"93","endLine":4,"endColumn":19},{"ruleId":"90","severity":1,"message":"106","line":37,"column":27,"nodeType":"92","messageId":"93","endLine":37,"endColumn":45},{"ruleId":"90","severity":1,"message":"107","line":39,"column":32,"nodeType":"92","messageId":"93","endLine":39,"endColumn":37},{"ruleId":"90","severity":1,"message":"108","line":3,"column":24,"nodeType":"92","messageId":"93","endLine":3,"endColumn":41},{"ruleId":"90","severity":1,"message":"107","line":12,"column":33,"nodeType":"92","messageId":"93","endLine":12,"endColumn":38},{"ruleId":"90","severity":1,"message":"107","line":37,"column":32,"nodeType":"92","messageId":"93","endLine":37,"endColumn":37},{"ruleId":"90","severity":1,"message":"109","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":13},{"ruleId":"90","severity":1,"message":"110","line":1,"column":16,"nodeType":"92","messageId":"93","endLine":1,"endColumn":25},{"ruleId":"90","severity":1,"message":"111","line":2,"column":9,"nodeType":"92","messageId":"93","endLine":2,"endColumn":17},{"ruleId":"90","severity":1,"message":"112","line":2,"column":19,"nodeType":"92","messageId":"93","endLine":2,"endColumn":27},{"ruleId":"90","severity":1,"message":"113","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":19},{"ruleId":"90","severity":1,"message":"114","line":3,"column":21,"nodeType":"92","messageId":"93","endLine":3,"endColumn":30},{"ruleId":"90","severity":1,"message":"115","line":3,"column":32,"nodeType":"92","messageId":"93","endLine":3,"endColumn":41},{"ruleId":"90","severity":1,"message":"116","line":3,"column":43,"nodeType":"92","messageId":"93","endLine":3,"endColumn":59},{"ruleId":"90","severity":1,"message":"117","line":3,"column":61,"nodeType":"92","messageId":"93","endLine":3,"endColumn":71},{"ruleId":"90","severity":1,"message":"118","line":9,"column":25,"nodeType":"92","messageId":"93","endLine":9,"endColumn":32},{"ruleId":"90","severity":1,"message":"107","line":9,"column":34,"nodeType":"92","messageId":"93","endLine":9,"endColumn":39},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'inspect' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'Paper' is defined but never used.","'styled' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'TextField' is defined but never used.","'setHasAccessFilter' is assigned a value but never used.","'error' is assigned a value but never used.","'useCollectionData' is defined but never used.","'React' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Fragment' is defined but never used.","'Connector' is defined but never used.","'Connected' is defined but never used.","'subscribe' is defined but never used.","'setConnectStatus' is defined but never used.","'setPayload' is defined but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]