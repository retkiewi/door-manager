[{"D:\\AGH\\Sem5\\TIR\\door-manager\\src\\index.tsx":"1","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\reportWebVitals.ts":"2","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\App.tsx":"3","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\Sidebar\\index.tsx":"4","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\LoginBox\\index.tsx":"5","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\DoorManagerView\\index.tsx":"6","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\UserManagerView\\index.tsx":"7","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\ViewLogsTab\\index.tsx":"8","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\ManageAccessTab\\index.tsx":"9","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\firebaseApp.tsx":"10"},{"size":812,"mtime":1609880334280,"results":"11","hashOfConfig":"12"},{"size":440,"mtime":1609871603006,"results":"13","hashOfConfig":"12"},{"size":1120,"mtime":1609880361491,"results":"14","hashOfConfig":"12"},{"size":1299,"mtime":1609880361427,"results":"15","hashOfConfig":"12"},{"size":1594,"mtime":1609871603001,"results":"16","hashOfConfig":"12"},{"size":1022,"mtime":1609871603000,"results":"17","hashOfConfig":"12"},{"size":6710,"mtime":1609880361467,"results":"18","hashOfConfig":"12"},{"size":1683,"mtime":1609871603005,"results":"19","hashOfConfig":"12"},{"size":4587,"mtime":1609880334278,"results":"20","hashOfConfig":"12"},{"size":428,"mtime":1609880334279,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1sjqsfc",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\AGH\\Sem5\\TIR\\door-manager\\src\\index.tsx",["47"],"D:\\AGH\\Sem5\\TIR\\door-manager\\src\\reportWebVitals.ts",[],["48","49"],"D:\\AGH\\Sem5\\TIR\\door-manager\\src\\App.tsx",["50"],"D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\Sidebar\\index.tsx",["51"],"import { FC } from \"react\";\r\nimport styles from \"./styles.module.css\";\r\nimport { inspect } from \"util\";\r\nimport {Button, styled} from \"@material-ui/core\";\r\n\r\nconst MenuButton = styled(Button)({\r\n    margin: \"0 10px 20px 10px\",\r\n})\r\n\r\nconst LogOutButton = styled(Button)({\r\n    margin: \"auto 10px 10px 10px\",\r\n})\r\n\r\nexport const Sidebar: FC<{\r\n  isLoggedIn: boolean;\r\n  setIsLoggedIn: (state: boolean) => void;\r\n}> = (props) => {\r\n    function logOut() {\r\n        props.setIsLoggedIn(false);\r\n    }\r\n\r\n\r\n  return (\r\n    <div className={styles.SideBar}>\r\n      <MenuButton\r\n        variant={\"contained\"}\r\n        color={\"primary\"}\r\n        className={styles.MenuButton}\r\n      >\r\n        Manage Doors\r\n      </MenuButton>\r\n      <MenuButton\r\n        variant={\"contained\"}\r\n        color={\"primary\"}\r\n        className={styles.MenuButton}\r\n      >\r\n        Manage Users\r\n      </MenuButton>\r\n      <LogOutButton variant={\"contained\"} className={styles.LogOutButton} onClick={logOut}>\r\n        Log Out\r\n      </LogOutButton>\r\n    </div>\r\n  );\r\n};\r\n","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\LoginBox\\index.tsx",[],"D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\DoorManagerView\\index.tsx",["52","53","54","55","56","57","58","59","60","61","62"],"import { FC, useState } from \"react\";\r\nimport styles from \"./styles.module.css\";\r\nimport { ManageAccessTab } from \"../ManageAccessTab\"\r\nimport { ViewLogsTab } from \"../ViewLogsTab\"\r\nimport {\r\n  AppBar,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Paper,\r\n  styled,\r\n  Tab,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Tabs,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n\r\nexport const DoorManagerView: FC = (props) => {\r\n  const tabMap = {\r\n    0: ManageAccessTab,\r\n    1: ViewLogsTab,\r\n  };\r\n  const [tab, setTab] = useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setTab(newValue);\r\n  };\r\n\r\n  const CurrentTab = tabMap[tab];\r\n  return (\r\n    <div className={styles.DoorManagerView}>\r\n      <AppBar position={\"sticky\"}>\r\n        <Tabs value={tab} onChange={handleChange} indicatorColor={\"secondary\"}>\r\n          <Tab label={\"Manage Access\"} />\r\n          <Tab label={\"View Logs\"} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <CurrentTab></CurrentTab>\r\n    </div>\r\n  );\r\n};\r\n","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\UserManagerView\\index.tsx",["63","64","65","66","67","68","69","70","71"],"import {\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Paper,\r\n  styled,\r\n  Table, TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport {FC, useState} from \"react\";\r\nimport styles from \"../DoorManagerView/styles.module.css\";\r\nimport firebase from \"firebase\";\r\nimport {useCollection, useCollectionData} from \"react-firebase-hooks/firestore\";\r\nimport {firebaseApp} from \"../../firebaseApp\";\r\n\r\nexport const UserManagerView: FC = (props) => {\r\n  type User = {\r\n    name: string;\r\n    surname: string;\r\n    cardId: string;\r\n    hasAccess: boolean;\r\n  };\r\n\r\n  function createUserData(\r\n      name: string,\r\n      surname: string,\r\n      cardId: string,\r\n      hasAccess: boolean\r\n  ) {\r\n    return { name: name, surname: surname, cardId: cardId, hasAccess: hasAccess };\r\n  }\r\n\r\n  const rows = [\r\n    createUserData(\"Adam\", \"Kowalski\", \"1234:1234:1234\", true),\r\n    createUserData(\"Zbigniew\", \"Nowak\", \"2234:1234:1234\", false),\r\n    createUserData(\"Andrzej\", \"Jakiś\", \"2234:3234:1234\", true),\r\n    createUserData(\"Paweł\", \"Inny\", \"4234:3234:4234\", false),\r\n  ];\r\n\r\n  const MyTableCell = styled(TableCell)({\r\n    paddingLeft: \"25px\",\r\n  });\r\n\r\n  function applyFilter(value, filter) {\r\n    value = value.replaceAll(\":\", \"\");\r\n    filter = filter.replaceAll(\":\", \"\");\r\n    return new RegExp(`.*${filter}.*`, \"i\").test(value);\r\n  }\r\n\r\n  const [nameFilter, setNameFilter] = useState(\"\");\r\n\r\n  const [surnameFilter, setSurnameFilter] = useState(\"\");\r\n\r\n  const [cardIdFilter, setCardIdFilter] = useState(\"\");\r\n\r\n  const [hasAccessFilter, setHasAccessFilter] = useState(false);\r\n\r\n  const [loadedUsers, loading, error] = useCollection(firebaseApp.firestore().collection('Users'));\r\n  console.log(loadedUsers);\r\n\r\n\r\n\r\n  // const onCheckboxChange = (index) => {\r\n  //   const arrayCopy = [...loadedUsers];\r\n  //   arrayCopy[index] = {\r\n  //     ...arrayCopy[index],\r\n  //     hasAccess: !loadedUsers[index].hasAccess,\r\n  //   };\r\n  //   console.log(arrayCopy);\r\n  //   setUsers(arrayCopy);\r\n  // };\r\n  return (\r\n      <div className={styles.DoorManagerView}>\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <TextField\r\n                      variant={\"outlined\"}\r\n                      size={\"small\"}\r\n                      label={\"Name\"}\r\n                      value={nameFilter}\r\n                      onChange={(e) => setNameFilter(e.target.value)}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                      variant={\"outlined\"}\r\n                      size={\"small\"}\r\n                      label={\"Surname\"}\r\n                      value={surnameFilter}\r\n                      onChange={(e) => setSurnameFilter(e.target.value)}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                      variant={\"outlined\"}\r\n                      size={\"small\"}\r\n                      label={\"Card ID\"}\r\n                      value={cardIdFilter}\r\n                      onChange={(e) => setCardIdFilter(e.target.value)}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                        <Button variant={\"contained\"}>ADD</Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loadedUsers && loadedUsers.docs && (loadedUsers.docs as any).map((row, i) =>\r\n                  applyFilter(row.Name, nameFilter) &&\r\n                  applyFilter(row.Surname, surnameFilter) &&\r\n                  // applyFilter(row.cardId, cardIdFilter) &&\r\n                  row.hasAccess === hasAccessFilter ? (\r\n                      <TableRow key={row.id}>\r\n                        <MyTableCell>{row.Name}</MyTableCell>\r\n                        <MyTableCell>{row.Surname}</MyTableCell>\r\n                        {<MyTableCell>{row.CardID}</MyTableCell>}\r\n                        <TableCell align=\"center\">\r\n                          <Button variant={\"contained\"}>Remove</Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                  ) : null\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n  );\r\n};\r\n","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\ViewLogsTab\\index.tsx",[],"D:\\AGH\\Sem5\\TIR\\door-manager\\src\\components\\ManageAccessTab\\index.tsx",["72","73","74","75","76","77"],"import {\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Paper,\r\n  styled,\r\n  Table, TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport {FC, useState} from \"react\";\r\nimport {useCollection, useCollectionData} from \"react-firebase-hooks/firestore\";\r\nimport firebase from \"firebase\";\r\nimport {firebaseApp} from \"../../firebaseApp\";\r\n\r\n\r\n\r\nexport const ManageAccessTab: FC = (props) => {\r\n  type User = {\r\n    name: string;\r\n    surname: string;\r\n    cardId: string;\r\n    hasAccess: boolean;\r\n  };\r\n\r\n  function createUserData(\r\n      name: string,\r\n      surname: string,\r\n      cardId: string,\r\n      hasAccess: boolean\r\n  ) {\r\n    return { name: name, surname: surname, cardId: cardId, hasAccess: hasAccess };\r\n  }\r\n\r\n  const MyTableCell = styled(TableCell)({\r\n    paddingLeft: \"25px\",\r\n  });\r\n\r\n  function applyFilter(value, filter) {\r\n    value = value.replaceAll(\":\", \"\");\r\n    filter = filter.replaceAll(\":\", \"\");\r\n    return new RegExp(`.*${filter}.*`, \"i\").test(value);\r\n  }\r\n\r\n  const [nameFilter, setNameFilter] = useState(\"\");\r\n\r\n  const [surnameFilter, setSurnameFilter] = useState(\"\");\r\n\r\n  const [cardIdFilter, setCardIdFilter] = useState(\"\");\r\n\r\n  const [hasAccessFilter, setHasAccessFilter] = useState(false);\r\n\r\n  const [loadedUsers, loading, error] = useCollection(firebaseApp.firestore().collection('Users'));\r\n\r\n  console.log(loadedUsers?.docs[0].data());\r\n  console.log(loadedUsers?.docs[0].id);\r\n  console.log(loadedUsers?.docs);\r\n\r\n  const onCheckboxChange = (index) => {\r\n    const arrayCopy = [...loadedUsers];\r\n    arrayCopy[index] = {\r\n      ...arrayCopy[index],\r\n      hasAccess: !loadedUsers[index].HasAccess,\r\n    };\r\n    console.log(arrayCopy);\r\n    setUsers(arrayCopy);\r\n  };\r\n\r\n  return (\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <TextField\r\n                      variant={\"outlined\"}\r\n                      size={\"small\"}\r\n                      label={\"Name\"}\r\n                      value={nameFilter}\r\n                      onChange={(e) => setNameFilter(e.target.value)}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                      variant={\"outlined\"}\r\n                      size={\"small\"}\r\n                      label={\"Surname\"}\r\n                      value={surnameFilter}\r\n                      onChange={(e) => setSurnameFilter(e.target.value)}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                      variant={\"outlined\"}\r\n                      size={\"small\"}\r\n                      label={\"Card ID\"}\r\n                      value={cardIdFilter}\r\n                      onChange={(e) => setCardIdFilter(e.target.value)}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                            checked={hasAccessFilter}\r\n                            onChange={(e) => setHasAccessFilter(e.target.checked)}\r\n                        />\r\n                      }\r\n                      label=\"Has Access\"\r\n                      labelPlacement=\"start\"\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loadedUsers && loadedUsers?.docs && (loadedUsers?.docs as any).map((row, i) =>\r\n                  // applyFilter(row.Name, nameFilter) &&\r\n                  // applyFilter(row.Surname, surnameFilter) &&\r\n                  // applyFilter(row.cardId, cardIdFilter) &&\r\n                  row.hasAccess === hasAccessFilter ? (\r\n                      <TableRow key={row.CardID}>\r\n                        <MyTableCell>{row.Name}</MyTableCell>\r\n                        <MyTableCell>{row.Surname}</MyTableCell>\r\n                        {<MyTableCell>{row.CardID}</MyTableCell>}\r\n\r\n                        <TableCell align=\"center\">\r\n                          <Checkbox\r\n                              checked={row.HasAccess}\r\n                              onChange={() => onCheckboxChange(i)}\r\n                          />\r\n                        </TableCell>\r\n\r\n                      </TableRow>\r\n                  ) : null\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n  );\r\n};\r\n","D:\\AGH\\Sem5\\TIR\\door-manager\\src\\firebaseApp.tsx",[],{"ruleId":"78","severity":1,"message":"79","line":7,"column":8,"nodeType":"80","messageId":"81","endLine":7,"endColumn":16},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":null,"fatal":true,"severity":2,"message":"86","line":18,"column":0},{"ruleId":"78","severity":1,"message":"87","line":3,"column":10,"nodeType":"80","messageId":"81","endLine":3,"endColumn":17},{"ruleId":"78","severity":1,"message":"88","line":7,"column":3,"nodeType":"80","messageId":"81","endLine":7,"endColumn":11},{"ruleId":"78","severity":1,"message":"89","line":8,"column":3,"nodeType":"80","messageId":"81","endLine":8,"endColumn":19},{"ruleId":"78","severity":1,"message":"90","line":9,"column":3,"nodeType":"80","messageId":"81","endLine":9,"endColumn":8},{"ruleId":"78","severity":1,"message":"91","line":10,"column":3,"nodeType":"80","messageId":"81","endLine":10,"endColumn":9},{"ruleId":"78","severity":1,"message":"92","line":12,"column":3,"nodeType":"80","messageId":"81","endLine":12,"endColumn":8},{"ruleId":"78","severity":1,"message":"93","line":13,"column":3,"nodeType":"80","messageId":"81","endLine":13,"endColumn":12},{"ruleId":"78","severity":1,"message":"94","line":14,"column":3,"nodeType":"80","messageId":"81","endLine":14,"endColumn":12},{"ruleId":"78","severity":1,"message":"95","line":15,"column":3,"nodeType":"80","messageId":"81","endLine":15,"endColumn":17},{"ruleId":"78","severity":1,"message":"96","line":16,"column":3,"nodeType":"80","messageId":"81","endLine":16,"endColumn":12},{"ruleId":"78","severity":1,"message":"97","line":17,"column":3,"nodeType":"80","messageId":"81","endLine":17,"endColumn":11},{"ruleId":"78","severity":1,"message":"98","line":19,"column":3,"nodeType":"80","messageId":"81","endLine":19,"endColumn":12},{"ruleId":"78","severity":1,"message":"88","line":3,"column":3,"nodeType":"80","messageId":"81","endLine":3,"endColumn":11},{"ruleId":"78","severity":1,"message":"89","line":4,"column":3,"nodeType":"80","messageId":"81","endLine":4,"endColumn":19},{"ruleId":"78","severity":1,"message":"79","line":16,"column":8,"nodeType":"80","messageId":"81","endLine":16,"endColumn":16},{"ruleId":"78","severity":1,"message":"99","line":17,"column":24,"nodeType":"80","messageId":"81","endLine":17,"endColumn":41},{"ruleId":"78","severity":1,"message":"100","line":21,"column":8,"nodeType":"80","messageId":"81","endLine":21,"endColumn":12},{"ruleId":"78","severity":1,"message":"101","line":28,"column":12,"nodeType":"80","messageId":"81","endLine":28,"endColumn":26},{"ruleId":"78","severity":1,"message":"102","line":53,"column":27,"nodeType":"80","messageId":"81","endLine":53,"endColumn":45},{"ruleId":"78","severity":1,"message":"103","line":55,"column":23,"nodeType":"80","messageId":"81","endLine":55,"endColumn":30},{"ruleId":"78","severity":1,"message":"104","line":55,"column":32,"nodeType":"80","messageId":"81","endLine":55,"endColumn":37},{"ruleId":"78","severity":1,"message":"99","line":14,"column":24,"nodeType":"80","messageId":"81","endLine":14,"endColumn":41},{"ruleId":"78","severity":1,"message":"79","line":15,"column":8,"nodeType":"80","messageId":"81","endLine":15,"endColumn":16},{"ruleId":"78","severity":1,"message":"100","line":21,"column":8,"nodeType":"80","messageId":"81","endLine":21,"endColumn":12},{"ruleId":"78","severity":1,"message":"101","line":28,"column":12,"nodeType":"80","messageId":"81","endLine":28,"endColumn":26},{"ruleId":"78","severity":1,"message":"103","line":55,"column":23,"nodeType":"80","messageId":"81","endLine":55,"endColumn":30},{"ruleId":"78","severity":1,"message":"104","line":55,"column":32,"nodeType":"80","messageId":"81","endLine":55,"endColumn":37},"@typescript-eslint/no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["105"],"no-negated-in-lhs",["106"],"Parsing error: Merge conflict marker encountered.","'inspect' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'Paper' is defined but never used.","'styled' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'TextField' is defined but never used.","'useCollectionData' is defined but never used.","'User' is defined but never used.","'createUserData' is defined but never used.","'setHasAccessFilter' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]