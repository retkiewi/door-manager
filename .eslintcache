[{"C:\\Users\\krzys\\OneDrive\\Dokumenty\\door-manager3000\\src\\index.tsx":"1","C:\\Users\\krzys\\OneDrive\\Dokumenty\\door-manager3000\\src\\reportWebVitals.ts":"2","C:\\Users\\krzys\\OneDrive\\Dokumenty\\door-manager3000\\src\\App.tsx":"3","C:\\Users\\krzys\\OneDrive\\Dokumenty\\door-manager3000\\src\\components\\LoginBox\\index.tsx":"4","C:\\Users\\krzys\\OneDrive\\Dokumenty\\door-manager3000\\src\\components\\Sidebar\\index.tsx":"5","C:\\Users\\krzys\\OneDrive\\Dokumenty\\door-manager3000\\src\\components\\ManageAccessTab\\index.tsx":"6","C:\\Users\\krzys\\OneDrive\\Dokumenty\\door-manager3000\\src\\components\\ViewLogsTab\\index.tsx":"7","C:\\Users\\krzys\\OneDrive\\Dokumenty\\door-manager3000\\src\\components\\UserManagerView\\index.tsx":"8","C:\\Users\\krzys\\OneDrive\\Dokumenty\\door-manager3000\\src\\components\\DoorManagerView\\index.tsx":"9"},{"size":778,"mtime":1609938643098,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":1013,"mtime":1609938643090,"results":"13","hashOfConfig":"11"},{"size":1537,"mtime":1609866992805,"results":"14","hashOfConfig":"11"},{"size":1248,"mtime":1609872256519,"results":"15","hashOfConfig":"11"},{"size":4454,"mtime":1609938643092,"results":"16","hashOfConfig":"11"},{"size":1634,"mtime":1609796480252,"results":"17","hashOfConfig":"11"},{"size":5268,"mtime":1609938643097,"results":"18","hashOfConfig":"11"},{"size":978,"mtime":1609797120408,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"mdijhp",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},"C:\\Users\\krzys\\OneDrive\\Dokumenty\\door-manager3000\\src\\index.tsx",[],["44","45"],"C:\\Users\\krzys\\OneDrive\\Dokumenty\\door-manager3000\\src\\reportWebVitals.ts",[],"C:\\Users\\krzys\\OneDrive\\Dokumenty\\door-manager3000\\src\\App.tsx",["46"],"import React, { useState } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport { LoginBox } from \"./components/LoginBox\";\r\nimport { Sidebar } from \"./components/Sidebar\";\r\nimport { DoorManagerView } from \"./components/DoorManagerView\";\r\nimport { UserManagerView} from \"./components/UserManagerView\";\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n  const [currentView, setCurrentView] = useState(0)\r\n\r\n  const viewMap = {\r\n    0: DoorManagerView,\r\n    1: UserManagerView,\r\n  }\r\n\r\n  const CurrentViewComponent = viewMap[currentView]\r\n  return (\r\n    <div className=\"App\">\r\n      {!isLoggedIn ? (\r\n        <LoginBox isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\r\n      ) : (\r\n        <div className=\"MainFrame\">\r\n          <Sidebar isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} currentView={currentView} setCurrentView={setCurrentView}/>\r\n          <CurrentViewComponent/>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\krzys\\OneDrive\\Dokumenty\\door-manager3000\\src\\components\\LoginBox\\index.tsx",[],"C:\\Users\\krzys\\OneDrive\\Dokumenty\\door-manager3000\\src\\components\\Sidebar\\index.tsx",["47"],"import { FC } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { inspect } from \"util\";\nimport { Button, styled } from \"@material-ui/core\";\n\nconst MenuButton = styled(Button)({\n  margin: \"0 10px 20px 10px\",\n});\n\nconst LogOutButton = styled(Button)({\n  margin: \"auto 10px 10px 10px\",\n});\n\nexport const Sidebar: FC<{\n  isLoggedIn: boolean;\n  setIsLoggedIn: (state: boolean) => void;\n  currentView: number;\n  setCurrentView: (state: number) => void;\n}> = (props) => {\n  function logOut() {\n    props.setIsLoggedIn(false);\n  }\n\n  return (\n    <div className={styles.SideBar}>\n      <MenuButton\n        variant={\"contained\"}\n        color={props.currentView===1?\"primary\":\"default\"}\n        className={styles.MenuButton}\n        onClick={() => props.setCurrentView(0)}\n      >\n        Manage Doors\n      </MenuButton>\n      <MenuButton\n        variant={\"contained\"}\n        color={props.currentView===0?\"primary\":\"default\"}\n        className={styles.MenuButton}\n        onClick={() => props.setCurrentView(1)}\n      >\n        Manage Users\n      </MenuButton>\n      <LogOutButton\n        variant={\"contained\"}\n        className={styles.LogOutButton}\n        onClick={logOut}\n      >\n        Log Out\n      </LogOutButton>\n    </div>\n  );\n};\n","C:\\Users\\krzys\\OneDrive\\Dokumenty\\door-manager3000\\src\\components\\ManageAccessTab\\index.tsx",[],"C:\\Users\\krzys\\OneDrive\\Dokumenty\\door-manager3000\\src\\components\\ViewLogsTab\\index.tsx",[],["48","49"],"C:\\Users\\krzys\\OneDrive\\Dokumenty\\door-manager3000\\src\\components\\UserManagerView\\index.tsx",["50","51"],"import {\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Paper,\r\n  styled,\r\n  Table, TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport {FC, useState} from \"react\";\r\nimport styles from \"../DoorManagerView/styles.module.css\";\r\n\r\nfunction capitalize(s:string){\r\n  return s.charAt(0).toUpperCase() + s.slice(1);\r\n}\r\n\r\nexport const UserManagerView: FC = (props) => {\r\n  type User = {\r\n    name: string;\r\n    surname: string;\r\n    cardId: string;\r\n    hasAccess: boolean;\r\n  };\r\n\r\n  function createUserData(\r\n      name: string,\r\n      surname: string,\r\n      cardId: string,\r\n      hasAccess: boolean\r\n  ) {\r\n    return { name: name, surname: surname, cardId: cardId, hasAccess: hasAccess };\r\n  }\r\n\r\n  const rows = [\r\n    createUserData(\"Adam\", \"Kowalski\", \"1234:1234:1234\", true),\r\n    createUserData(\"Zbigniew\", \"Nowak\", \"2234:1234:1234\", false),\r\n    createUserData(\"Andrzej\", \"Jakiś\", \"2234:3234:1234\", true),\r\n    createUserData(\"Paweł\", \"Inny\", \"4234:3234:4234\", false),\r\n  ];\r\n\r\n  const MyTableCell = styled(TableCell)({\r\n    paddingLeft: \"25px\",\r\n  });\r\n\r\n  function applyFilter(value, filter) {\r\n    value = value.replaceAll(\":\", \"\");\r\n    filter = filter.replaceAll(\":\", \"\");\r\n    return new RegExp(`.*${filter}.*`, \"i\").test(value);\r\n  }\r\n\r\n  const [nameFilter, setNameFilter] = useState(\"\");\r\n\r\n  const [surnameFilter, setSurnameFilter] = useState(\"\");\r\n\r\n  const [cardIdFilter, setCardIdFilter] = useState(\"\");\r\n\r\n  const [users, setUsers] = useState<User[]>(rows);\r\n\r\n  const [incorrectName, setIncorrectName] = useState(false);\r\n\r\n  const [incorrectSurname, setIncorrectSurname] = useState(false);\r\n\r\n  const [incorrectCardId, setIncorrectCardId] = useState(false);\r\n\r\n  const onAdd = () => {\r\n    if(nameFilter.length <=0){\r\n      setIncorrectName(true);\r\n      return;\r\n    }\r\n\r\n    if(surnameFilter.length <=0){\r\n      setIncorrectSurname(true);\r\n      return;\r\n    }\r\n\r\n    if(!/^((\\d|[A-F]){2}:){3}(\\d|[A-F]){2}$/i.test(cardIdFilter)){\r\n      setIncorrectCardId(true);\r\n      return;\r\n    }\r\n\r\n    const arrayCopy = [...users, createUserData(capitalize(nameFilter), capitalize(surnameFilter), cardIdFilter, false)];\r\n    setUsers(arrayCopy);\r\n\r\n    setNameFilter(\"\");\r\n    setSurnameFilter(\"\");\r\n    setCardIdFilter(\"\");\r\n  };\r\n\r\n  const onRemove = (index) => {\r\n    console.log(index);\r\n    const arrayCopy = [...users];\r\n    console.log(arrayCopy);\r\n    setUsers(arrayCopy.filter((x, i) => i!==index));\r\n  };\r\n  return (\r\n      <div className={styles.DoorManagerView}>\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <TextField\r\n                      variant={\"outlined\"}\r\n                      size={\"small\"}\r\n                      label={\"Name\"}\r\n                      value={nameFilter}\r\n                      onChange={(e) => {\r\n                        setNameFilter(e.target.value);\r\n                        setIncorrectName(false)\r\n                      }}\r\n                      error={incorrectName}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                      variant={\"outlined\"}\r\n                      size={\"small\"}\r\n                      label={\"Surname\"}\r\n                      value={surnameFilter}\r\n                      onChange={(e) => {\r\n                        setSurnameFilter(e.target.value);\r\n                        setIncorrectSurname(false);\r\n                      }}\r\n                      error={incorrectSurname}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                      variant={\"outlined\"}\r\n                      size={\"small\"}\r\n                      label={\"Card ID\"}\r\n                      value={cardIdFilter}\r\n                      onChange={(e) => {\r\n                        setCardIdFilter(e.target.value);\r\n                        setIncorrectCardId(false);\r\n                      }}\r\n                      error={incorrectCardId}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                        <Button variant={\"contained\"} onClick={onAdd}>ADD</Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {users.map((row, i) =>\r\n                  applyFilter(row.name, nameFilter) &&\r\n                  applyFilter(row.surname, surnameFilter) &&\r\n                  applyFilter(row.cardId, cardIdFilter) ? (\r\n                      <TableRow key={row.cardId}>\r\n                        <MyTableCell>{row.name}</MyTableCell>\r\n                        <MyTableCell>{row.surname}</MyTableCell>\r\n                        <MyTableCell>{row.cardId}</MyTableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Button variant={\"contained\"} onClick={() => onRemove(i)}>Remove</Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                  ) : null\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n  );\r\n};\r\n","C:\\Users\\krzys\\OneDrive\\Dokumenty\\door-manager3000\\src\\components\\DoorManagerView\\index.tsx",["52","53","54","55","56","57","58","59","60","61","62"],"import { FC, useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { ManageAccessTab } from \"../ManageAccessTab\"\nimport { ViewLogsTab } from \"../ViewLogsTab\"\nimport {\n  AppBar,\n  Checkbox,\n  FormControlLabel,\n  Paper,\n  styled,\n  Tab,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tabs,\n  TextField,\n} from \"@material-ui/core\";\n\nexport const DoorManagerView: FC = (props) => {\n  const tabMap = {\n    0: ManageAccessTab,\n    1: ViewLogsTab,\n  };\n  const [tab, setTab] = useState(0);\n  const handleChange = (event, newValue) => {\n    setTab(newValue);\n  };\n\n  const CurrentTab = tabMap[tab];\n  return (\n    <div className={styles.DoorManagerView}>\n      <AppBar position={\"sticky\"}>\n        <Tabs value={tab} onChange={handleChange} indicatorColor={\"secondary\"}>\n          <Tab label={\"Manage Access\"} />\n          <Tab label={\"View Logs\"} />\n        </Tabs>\n      </AppBar>\n      <CurrentTab></CurrentTab>\n    </div>\n  );\n};\n",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":12},{"ruleId":"67","severity":1,"message":"71","line":3,"column":10,"nodeType":"69","messageId":"70","endLine":3,"endColumn":17},{"ruleId":"63","replacedBy":"72"},{"ruleId":"65","replacedBy":"73"},{"ruleId":"67","severity":1,"message":"74","line":3,"column":3,"nodeType":"69","messageId":"70","endLine":3,"endColumn":11},{"ruleId":"67","severity":1,"message":"75","line":4,"column":3,"nodeType":"69","messageId":"70","endLine":4,"endColumn":19},{"ruleId":"67","severity":1,"message":"74","line":7,"column":3,"nodeType":"69","messageId":"70","endLine":7,"endColumn":11},{"ruleId":"67","severity":1,"message":"75","line":8,"column":3,"nodeType":"69","messageId":"70","endLine":8,"endColumn":19},{"ruleId":"67","severity":1,"message":"76","line":9,"column":3,"nodeType":"69","messageId":"70","endLine":9,"endColumn":8},{"ruleId":"67","severity":1,"message":"77","line":10,"column":3,"nodeType":"69","messageId":"70","endLine":10,"endColumn":9},{"ruleId":"67","severity":1,"message":"78","line":12,"column":3,"nodeType":"69","messageId":"70","endLine":12,"endColumn":8},{"ruleId":"67","severity":1,"message":"79","line":13,"column":3,"nodeType":"69","messageId":"70","endLine":13,"endColumn":12},{"ruleId":"67","severity":1,"message":"80","line":14,"column":3,"nodeType":"69","messageId":"70","endLine":14,"endColumn":12},{"ruleId":"67","severity":1,"message":"81","line":15,"column":3,"nodeType":"69","messageId":"70","endLine":15,"endColumn":17},{"ruleId":"67","severity":1,"message":"82","line":16,"column":3,"nodeType":"69","messageId":"70","endLine":16,"endColumn":12},{"ruleId":"67","severity":1,"message":"83","line":17,"column":3,"nodeType":"69","messageId":"70","endLine":17,"endColumn":11},{"ruleId":"67","severity":1,"message":"84","line":19,"column":3,"nodeType":"69","messageId":"70","endLine":19,"endColumn":12},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'inspect' is defined but never used.",["85"],["86"],"'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'Paper' is defined but never used.","'styled' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'TextField' is defined but never used.","no-global-assign","no-unsafe-negation"]